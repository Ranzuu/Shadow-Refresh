name: Build and Release Resource Pack

on:
  push:
    tags:
      - 'v2.8.X/v*'   # triggered on existing tag push

jobs:
  build_release:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        branch: [main, modernity]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 0

      - name: Extract version info from tag
        id: vars
        run: |
          TAG="${GITHUB_REF##*/}"
          echo "Tag: $TAG"
          PACK_VERSION="${TAG#v2.8.X/}"
          echo "PACK_VERSION=$PACK_VERSION" >> $GITHUB_OUTPUT
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "BRANCH=${{ matrix.branch }}" >> $GITHUB_OUTPUT

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Update pack.mcmeta with new version and description
        run: |
          PACK_META="pack.mcmeta"
          PACK_VERSION="${{ steps.vars.outputs.PACK_VERSION }}"
          BRANCH="${{ steps.vars.outputs.BRANCH }}"
          DESC="§8GTNH v2.8.X §f/ §3Pack ${PACK_VERSION}"
          if [[ "$BRANCH" == "modernity" ]]; then
            DESC="$DESC §f- §2Modernity version"
          fi
          jq --arg desc "$DESC" '.pack.description = $desc' "$PACK_META" > temp.mcmeta && mv temp.mcmeta "$PACK_META"
          echo "Updated pack.mcmeta description to: $DESC"

      - id: zip
        name: Zip the resource pack
        run: |
          PACK_VERSION="${{ steps.vars.outputs.PACK_VERSION }}"
          BRANCH="${{ steps.vars.outputs.BRANCH }}"
          ZIP_NAME="Shadow UI ${PACK_VERSION}"
          if [[ "$BRANCH" == "modernity" ]]; then
            ZIP_NAME="${ZIP_NAME}-Modernity version"
          fi
          ZIP_NAME="${ZIP_NAME}.zip"
          zip -r "$ZIP_NAME" assets pack.mcmeta pack.png README.md
          echo "Packaged resource pack to $ZIP_NAME"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_OUTPUT

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.vars.outputs.TAG }}
          files: ${{ steps.zip.outputs.ZIP_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}